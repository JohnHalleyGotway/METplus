[config]
# time looping - options are INIT, VALID, RETRO, and REALTIME
LOOP_BY = INIT

# Format of VALID_BEG and VALID_END
INIT_TIME_FMT = %Y%m%d%H%M

# Start time for METplus run
INIT_BEG = 201801020000

# End time for METplus run
INIT_END = 201801020000

# Increment between METplus runs in seconds. Must be >= 60
INIT_INCREMENT = 86400

# List of forecast leads to process for each run time (init or valid)
# In hours if units are not specified
# If unset, defaults to 0 (don't loop through forecast leads)
LEAD_SEQ = begin_end_incr(3, 36, 3) 

# Options are times, processes
# times = run all items in the PROCESS_LIST for a single initialization
# time, then repeat until all times have been evaluated.
# processes = run each item in the PROCESS_LIST for all times
# specified, then repeat for the next item in the PROCESS_LIST.
LOOP_ORDER = times

# List of applications to run
PROCESS_LIST = PCPCombine, GridStat

###############
### PCPCOMBINE
###############

###############################
# Forecast PCPCombine Settings
###############################

# run pcp_colmbine on forecast data
FCST_PCP_COMBINE_RUN = True

# mode of pcp_combine to use (SUM, ADD, SUBTRACT)
FCST_PCP_COMBINE_METHOD = ADD

# maximum forecast lead to allow when searching for model data to use in PCPCombine
# Default is a very large time (4000 years) so setting this to a valid maximum value can
# speed up execution time of numerous runs
FCST_PCP_COMBINE_MAX_FORECAST = 

# description of data to be processed
# used in output file path
MODEL = GALWEM
OBTYPE = IMERG

# Forecast data description variables

# set to True if forecast input is probabilistic
FCST_IS_PROB = false

FCST_PCP_COMBINE_CONSTANT_INIT = TRUE

# Input data type of forecast input, only used if data is probabilistic to determine
# how to extract data from file
FCST_PCP_COMBINE_INPUT_DATATYPE = GRIB

FCST_PCP_COMBINE_BUCKET_INTERVAL = 3

# List of input accumulations for forecast data. Units are hours if not specified
# Items should be in order of preference of what accumulations to use if available and relevant
# Each item in the list corresponds to the equivalent in *_INPUT_NAMES and *_INPUT_LEVELS if specified
FCST_PCP_COMBINE_INPUT_ACCUMS = 1

# List of input names corresponding to each accumulation in *_INPUT_ACCUMS
# Can be left blank if using GRIB input
FCST_PCP_COMBINE_INPUT_NAMES = TPREC 

# List of input levels corresponding to each accumulation in *_INPUT_ACCUMS
# Can be left blank if using GRIB input
FCST_PCP_COMBINE_INPUT_LEVELS = A1

# desired output accumulation to build with forecast input
# Units are in hours if not specified
# Corresponds to *_OUTPUT_NAME
FCST_PCP_COMBINE_OUTPUT_ACCUM = 3

# Name of output field name to write
FCST_PCP_COMBINE_OUTPUT_NAME = APCP_03

##################################
# Observation PCPCombine Settings
##################################


# run pcp_combine on observation data
OBS_PCP_COMBINE_RUN = True

# mode of pcp_combine to use (SUM, ADD, SUBTRACT)
OBS_PCP_COMBINE_METHOD = ADD

# maximum forecast lead to allow when searching for model data to use in PCPCombine
# Default is a very large time (4000 years) so setting this to a valid maximum value can
# speed up execution time of numerous runs
OBS_PCP_COMBINE_MAX_FORECAST = 

# Observation data description variables

# set to True if forecast input is probabilistic
OBS_IS_PROB = false

#OBS_PCP_COMBINE_CONSTANT_INIT = TRUE

# Input data type of observation input, only used if data is probabilistic to determine
# how to extract data from file
OBS_PCP_COMBINE_INPUT_DATATYPE = PYTHON_NUMPY

# List of input accumulations for observation data. Units are hours if not specified
# Items should be in order of preference of what accumulations to use if available and relevant
# Each item in the list corresponds to the equivalent in *_INPUT_NAMES and *_INPUT_LEVELS if specified
# NOTE: The actual accumulation is 30 min, but we want the script to only run every 3 hours.
OBS_PCP_COMBINE_INPUT_ACCUMS = 3

# List of input names corresponding to each accumulation in *_INPUT_ACCUMS
# Can be left blank if using GRIB input
OBS_PCP_COMBINE_INPUT_NAMES = sum_IMERG_V06_NC4.py {OBS_PCP_COMBINE_INPUT_DIR} IRprecipitation {valid?fmt=%Y%m%d%H} {OBS_PCP_COMBINE_OUTPUT_ACCUM} 

# List of input levels corresponding to each accumulation in *_INPUT_ACCUMS
# Can be left blank if using GRIB input
OBS_PCP_COMBINE_INPUT_LEVELS = 

OBS_PCP_COMBINE_BUCKET_INTERVAL = 3

# desired output accumulation to build with observation input
# Units are in hours if not specified
# Corresponds to *_OUTPUT_NAME
OBS_PCP_COMBINE_OUTPUT_ACCUM = 3

# Name of output field name to write
OBS_PCP_COMBINE_OUTPUT_NAME = APCP_03

##############
### GRIDSTAT
##############

# grid to remap data. Value is set as the 'to_grid' variable in the 'regrid' dictionary
# See MET User's Guide for more information
GRID_STAT_REGRID_TO_GRID = FCST

# set the desc value in the GridStat MET config file
GRID_STAT_DESCRIPTION = NA

# List of variables to compare in GridStat - FCST_VAR1 variables correspond
# to OBS_VAR1 variables
# Note [FCST/OBS/BOTH]_GRID_STAT_VAR<n>_NAME can be used instead if different evaluations
# are needed for different tools

# Name of forecast variable 1
FCST_VAR1_NAME = APCP_03

# List of levels to evaluate for forecast variable 1
FCST_VAR1_LEVELS = A3

# List of thresholds to evaluate for each name/level combination for
# forecast variable 1
FCST_VAR1_THRESH =  >0.0, >=2.54, >=6.35, >SFP90, >SFP93, >SFP96, >SFP99, ==FBIAS1, ==FBIAS1, ==FBIAS1

# Name of observation variable 1
OBS_VAR1_NAME = APCP_03

# List of levels to evaluate for observation variable 1
# (*,*) is NetCDF notation - must include quotes around these values!
# must be the same length as FCST_VAR1_LEVELS
OBS_VAR1_LEVELS = A3

# List of thresholds to evaluate for each name/level combination for
# observation variable 1
OBS_VAR1_THRESH =  >0.0, >=2.54, >=6.35, >SOP90, >SOP93, >SOP96, >SOP99, >0.0, >=2.54, >=6.35 

# MET GridStat neighborhood values
# See the MET User's Guide GridStat section for more information

# width value passed to nbrhd dictionary in the MET config file
GRID_STAT_NEIGHBORHOOD_WIDTH = 1

# shape value passed to nbrhd dictionary in the MET config file
GRID_STAT_NEIGHBORHOOD_SHAPE = SQUARE

# cov thresh list passed to nbrhd dictionary in the MET config file
GRID_STAT_NEIGHBORHOOD_COV_THRESH = >=0.5

# Set to true to run GridStat separately for each field specified
# Set to false to create one run of GridStat per run time that
# includes all fields specified.
GRID_STAT_ONCE_PER_FIELD = False

# location of grid_stat MET config file
GRID_STAT_CONFIG_FILE = GridStatConfig_APCP_03h

GRID_STAT_OUTPUT_PREFIX = {MODEL}_vs_{OBTYPE}

[dir]
# input and output data directories
FCST_PCP_COMBINE_INPUT_DIR = {INPUT_BASE}/AF/GALWEM/1P5KM
FCST_PCP_COMBINE_OUTPUT_DIR = {OUTPUT_BASE}/AF/1P5KM_APCP3

OBS_PCP_COMBINE_INPUT_DIR = {INPUT_BASE}/AF/IMERG
OBS_PCP_COMBINE_OUTPUT_DIR = {OUTPUT_BASE}/AF/IMERG_APCP3

FCST_GRID_STAT_INPUT_DIR = {FCST_PCP_COMBINE_OUTPUT_DIR}
OBS_GRID_STAT_INPUT_DIR = {OBS_PCP_COMBINE_OUTPUT_DIR}

GRID_STAT_OUTPUT_DIR = {OUTPUT_BASE}/AF



[filename_templates]
# format of filenames
FCST_PCP_COMBINE_INPUT_TEMPLATE = PS.557WW_SC.U_DI.C_GP.GALWEM-RD-REGRID_GR.C1P5KM_AR.KOREA_DD.{init?fmt=%Y%m%d}_CY.00_FH.0{lead?fmt=%HH}_DF.GR2
FCST_PCP_COMBINE_OUTPUT_TEMPLATE = DI.C_GP.GALWEM-RD-REGRID_GR_KOREA.C1P5KM_REGRID_{init?fmt=%Y%m%d}_f{lead?fmt=%HH}_{FCST_PCP_COMBINE_OUTPUT_NAME}.nc

OBS_PCP_COMBINE_INPUT_TEMPLATE = PYTHON_NUMPY
OBS_PCP_COMBINE_OUTPUT_TEMPLATE = IMERG_{OBS_PCP_COMBINE_OUTPUT_ACCUM}H_00.00_{valid?fmt=%Y%m%d}-{valid?fmt=%H}0000.nc

FCST_GRID_STAT_INPUT_TEMPLATE = {FCST_PCP_COMBINE_OUTPUT_TEMPLATE}
OBS_GRID_STAT_INPUT_TEMPLATE = {OBS_PCP_COMBINE_OUTPUT_TEMPLATE}
GRID_STAT_OUTPUT_TEMPLATE = {init?fmt=%Y%m%d}/grid_stat

